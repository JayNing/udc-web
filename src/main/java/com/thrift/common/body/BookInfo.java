/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.thrift.common.body;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2018-05-09")
public class BookInfo implements org.apache.thrift.TBase<BookInfo, BookInfo._Fields>, java.io.Serializable, Cloneable, Comparable<BookInfo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("BookInfo");

  private static final org.apache.thrift.protocol.TField PK_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("pkId", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField BOOK_NO_FIELD_DESC = new org.apache.thrift.protocol.TField("bookNo", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField BOOK_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("bookName", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField AUTHOR_FIELD_DESC = new org.apache.thrift.protocol.TField("author", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField FLAG_FIELD_DESC = new org.apache.thrift.protocol.TField("flag", org.apache.thrift.protocol.TType.I32, (short)5);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("createTime", org.apache.thrift.protocol.TType.I64, (short)6);
  private static final org.apache.thrift.protocol.TField CREATE_USER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("createUserId", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField LAST_EDIT_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("lastEditTime", org.apache.thrift.protocol.TType.I64, (short)8);
  private static final org.apache.thrift.protocol.TField LAST_EDIT_USER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("lastEditUserId", org.apache.thrift.protocol.TType.STRING, (short)9);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new BookInfoStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new BookInfoTupleSchemeFactory();

  public int pkId; // required
  public String bookNo; // required
  public String bookName; // required
  public String author; // required
  public int flag; // required
  public long createTime; // required
  public String createUserId; // required
  public long lastEditTime; // required
  public String lastEditUserId; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    PK_ID((short)1, "pkId"),
    BOOK_NO((short)2, "bookNo"),
    BOOK_NAME((short)3, "bookName"),
    AUTHOR((short)4, "author"),
    FLAG((short)5, "flag"),
    CREATE_TIME((short)6, "createTime"),
    CREATE_USER_ID((short)7, "createUserId"),
    LAST_EDIT_TIME((short)8, "lastEditTime"),
    LAST_EDIT_USER_ID((short)9, "lastEditUserId");

    private static final java.util.Map<String, _Fields> byName = new java.util.HashMap<String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // PK_ID
          return PK_ID;
        case 2: // BOOK_NO
          return BOOK_NO;
        case 3: // BOOK_NAME
          return BOOK_NAME;
        case 4: // AUTHOR
          return AUTHOR;
        case 5: // FLAG
          return FLAG;
        case 6: // CREATE_TIME
          return CREATE_TIME;
        case 7: // CREATE_USER_ID
          return CREATE_USER_ID;
        case 8: // LAST_EDIT_TIME
          return LAST_EDIT_TIME;
        case 9: // LAST_EDIT_USER_ID
          return LAST_EDIT_USER_ID;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __PKID_ISSET_ID = 0;
  private static final int __FLAG_ISSET_ID = 1;
  private static final int __CREATETIME_ISSET_ID = 2;
  private static final int __LASTEDITTIME_ISSET_ID = 3;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.PK_ID, new org.apache.thrift.meta_data.FieldMetaData("pkId", org.apache.thrift.TFieldRequirementType.DEFAULT,
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.BOOK_NO, new org.apache.thrift.meta_data.FieldMetaData("bookNo", org.apache.thrift.TFieldRequirementType.DEFAULT,
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.BOOK_NAME, new org.apache.thrift.meta_data.FieldMetaData("bookName", org.apache.thrift.TFieldRequirementType.DEFAULT,
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AUTHOR, new org.apache.thrift.meta_data.FieldMetaData("author", org.apache.thrift.TFieldRequirementType.DEFAULT,
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.FLAG, new org.apache.thrift.meta_data.FieldMetaData("flag", org.apache.thrift.TFieldRequirementType.DEFAULT,
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("createTime", org.apache.thrift.TFieldRequirementType.DEFAULT,
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CREATE_USER_ID, new org.apache.thrift.meta_data.FieldMetaData("createUserId", org.apache.thrift.TFieldRequirementType.DEFAULT,
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LAST_EDIT_TIME, new org.apache.thrift.meta_data.FieldMetaData("lastEditTime", org.apache.thrift.TFieldRequirementType.DEFAULT,
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.LAST_EDIT_USER_ID, new org.apache.thrift.meta_data.FieldMetaData("lastEditUserId", org.apache.thrift.TFieldRequirementType.DEFAULT,
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(BookInfo.class, metaDataMap);
  }

  public BookInfo() {
  }

  public BookInfo(
    int pkId,
    String bookNo,
    String bookName,
    String author,
    int flag,
    long createTime,
    String createUserId,
    long lastEditTime,
    String lastEditUserId)
  {
    this();
    this.pkId = pkId;
    setPkIdIsSet(true);
    this.bookNo = bookNo;
    this.bookName = bookName;
    this.author = author;
    this.flag = flag;
    setFlagIsSet(true);
    this.createTime = createTime;
    setCreateTimeIsSet(true);
    this.createUserId = createUserId;
    this.lastEditTime = lastEditTime;
    setLastEditTimeIsSet(true);
    this.lastEditUserId = lastEditUserId;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public BookInfo(BookInfo other) {
    __isset_bitfield = other.__isset_bitfield;
    this.pkId = other.pkId;
    if (other.isSetBookNo()) {
      this.bookNo = other.bookNo;
    }
    if (other.isSetBookName()) {
      this.bookName = other.bookName;
    }
    if (other.isSetAuthor()) {
      this.author = other.author;
    }
    this.flag = other.flag;
    this.createTime = other.createTime;
    if (other.isSetCreateUserId()) {
      this.createUserId = other.createUserId;
    }
    this.lastEditTime = other.lastEditTime;
    if (other.isSetLastEditUserId()) {
      this.lastEditUserId = other.lastEditUserId;
    }
  }

  public BookInfo deepCopy() {
    return new BookInfo(this);
  }

  @Override
  public void clear() {
    setPkIdIsSet(false);
    this.pkId = 0;
    this.bookNo = null;
    this.bookName = null;
    this.author = null;
    setFlagIsSet(false);
    this.flag = 0;
    setCreateTimeIsSet(false);
    this.createTime = 0;
    this.createUserId = null;
    setLastEditTimeIsSet(false);
    this.lastEditTime = 0;
    this.lastEditUserId = null;
  }

  public int getPkId() {
    return this.pkId;
  }

  public BookInfo setPkId(int pkId) {
    this.pkId = pkId;
    setPkIdIsSet(true);
    return this;
  }

  public void unsetPkId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PKID_ISSET_ID);
  }

  /** Returns true if field pkId is set (has been assigned a value) and false otherwise */
  public boolean isSetPkId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PKID_ISSET_ID);
  }

  public void setPkIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PKID_ISSET_ID, value);
  }

  public String getBookNo() {
    return this.bookNo;
  }

  public BookInfo setBookNo(String bookNo) {
    this.bookNo = bookNo;
    return this;
  }

  public void unsetBookNo() {
    this.bookNo = null;
  }

  /** Returns true if field bookNo is set (has been assigned a value) and false otherwise */
  public boolean isSetBookNo() {
    return this.bookNo != null;
  }

  public void setBookNoIsSet(boolean value) {
    if (!value) {
      this.bookNo = null;
    }
  }

  public String getBookName() {
    return this.bookName;
  }

  public BookInfo setBookName(String bookName) {
    this.bookName = bookName;
    return this;
  }

  public void unsetBookName() {
    this.bookName = null;
  }

  /** Returns true if field bookName is set (has been assigned a value) and false otherwise */
  public boolean isSetBookName() {
    return this.bookName != null;
  }

  public void setBookNameIsSet(boolean value) {
    if (!value) {
      this.bookName = null;
    }
  }

  public String getAuthor() {
    return this.author;
  }

  public BookInfo setAuthor(String author) {
    this.author = author;
    return this;
  }

  public void unsetAuthor() {
    this.author = null;
  }

  /** Returns true if field author is set (has been assigned a value) and false otherwise */
  public boolean isSetAuthor() {
    return this.author != null;
  }

  public void setAuthorIsSet(boolean value) {
    if (!value) {
      this.author = null;
    }
  }

  public int getFlag() {
    return this.flag;
  }

  public BookInfo setFlag(int flag) {
    this.flag = flag;
    setFlagIsSet(true);
    return this;
  }

  public void unsetFlag() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __FLAG_ISSET_ID);
  }

  /** Returns true if field flag is set (has been assigned a value) and false otherwise */
  public boolean isSetFlag() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __FLAG_ISSET_ID);
  }

  public void setFlagIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __FLAG_ISSET_ID, value);
  }

  public long getCreateTime() {
    return this.createTime;
  }

  public BookInfo setCreateTime(long createTime) {
    this.createTime = createTime;
    setCreateTimeIsSet(true);
    return this;
  }

  public void unsetCreateTime() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  /** Returns true if field createTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTime() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  public void setCreateTimeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __CREATETIME_ISSET_ID, value);
  }

  public String getCreateUserId() {
    return this.createUserId;
  }

  public BookInfo setCreateUserId(String createUserId) {
    this.createUserId = createUserId;
    return this;
  }

  public void unsetCreateUserId() {
    this.createUserId = null;
  }

  /** Returns true if field createUserId is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateUserId() {
    return this.createUserId != null;
  }

  public void setCreateUserIdIsSet(boolean value) {
    if (!value) {
      this.createUserId = null;
    }
  }

  public long getLastEditTime() {
    return this.lastEditTime;
  }

  public BookInfo setLastEditTime(long lastEditTime) {
    this.lastEditTime = lastEditTime;
    setLastEditTimeIsSet(true);
    return this;
  }

  public void unsetLastEditTime() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __LASTEDITTIME_ISSET_ID);
  }

  /** Returns true if field lastEditTime is set (has been assigned a value) and false otherwise */
  public boolean isSetLastEditTime() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __LASTEDITTIME_ISSET_ID);
  }

  public void setLastEditTimeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __LASTEDITTIME_ISSET_ID, value);
  }

  public String getLastEditUserId() {
    return this.lastEditUserId;
  }

  public BookInfo setLastEditUserId(String lastEditUserId) {
    this.lastEditUserId = lastEditUserId;
    return this;
  }

  public void unsetLastEditUserId() {
    this.lastEditUserId = null;
  }

  /** Returns true if field lastEditUserId is set (has been assigned a value) and false otherwise */
  public boolean isSetLastEditUserId() {
    return this.lastEditUserId != null;
  }

  public void setLastEditUserIdIsSet(boolean value) {
    if (!value) {
      this.lastEditUserId = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case PK_ID:
      if (value == null) {
        unsetPkId();
      } else {
        setPkId((Integer)value);
      }
      break;

    case BOOK_NO:
      if (value == null) {
        unsetBookNo();
      } else {
        setBookNo((String)value);
      }
      break;

    case BOOK_NAME:
      if (value == null) {
        unsetBookName();
      } else {
        setBookName((String)value);
      }
      break;

    case AUTHOR:
      if (value == null) {
        unsetAuthor();
      } else {
        setAuthor((String)value);
      }
      break;

    case FLAG:
      if (value == null) {
        unsetFlag();
      } else {
        setFlag((Integer)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreateTime();
      } else {
        setCreateTime((Long)value);
      }
      break;

    case CREATE_USER_ID:
      if (value == null) {
        unsetCreateUserId();
      } else {
        setCreateUserId((String)value);
      }
      break;

    case LAST_EDIT_TIME:
      if (value == null) {
        unsetLastEditTime();
      } else {
        setLastEditTime((Long)value);
      }
      break;

    case LAST_EDIT_USER_ID:
      if (value == null) {
        unsetLastEditUserId();
      } else {
        setLastEditUserId((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case PK_ID:
      return getPkId();

    case BOOK_NO:
      return getBookNo();

    case BOOK_NAME:
      return getBookName();

    case AUTHOR:
      return getAuthor();

    case FLAG:
      return getFlag();

    case CREATE_TIME:
      return getCreateTime();

    case CREATE_USER_ID:
      return getCreateUserId();

    case LAST_EDIT_TIME:
      return getLastEditTime();

    case LAST_EDIT_USER_ID:
      return getLastEditUserId();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case PK_ID:
      return isSetPkId();
    case BOOK_NO:
      return isSetBookNo();
    case BOOK_NAME:
      return isSetBookName();
    case AUTHOR:
      return isSetAuthor();
    case FLAG:
      return isSetFlag();
    case CREATE_TIME:
      return isSetCreateTime();
    case CREATE_USER_ID:
      return isSetCreateUserId();
    case LAST_EDIT_TIME:
      return isSetLastEditTime();
    case LAST_EDIT_USER_ID:
      return isSetLastEditUserId();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof BookInfo)
      return this.equals((BookInfo)that);
    return false;
  }

  public boolean equals(BookInfo that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_pkId = true;
    boolean that_present_pkId = true;
    if (this_present_pkId || that_present_pkId) {
      if (!(this_present_pkId && that_present_pkId))
        return false;
      if (this.pkId != that.pkId)
        return false;
    }

    boolean this_present_bookNo = true && this.isSetBookNo();
    boolean that_present_bookNo = true && that.isSetBookNo();
    if (this_present_bookNo || that_present_bookNo) {
      if (!(this_present_bookNo && that_present_bookNo))
        return false;
      if (!this.bookNo.equals(that.bookNo))
        return false;
    }

    boolean this_present_bookName = true && this.isSetBookName();
    boolean that_present_bookName = true && that.isSetBookName();
    if (this_present_bookName || that_present_bookName) {
      if (!(this_present_bookName && that_present_bookName))
        return false;
      if (!this.bookName.equals(that.bookName))
        return false;
    }

    boolean this_present_author = true && this.isSetAuthor();
    boolean that_present_author = true && that.isSetAuthor();
    if (this_present_author || that_present_author) {
      if (!(this_present_author && that_present_author))
        return false;
      if (!this.author.equals(that.author))
        return false;
    }

    boolean this_present_flag = true;
    boolean that_present_flag = true;
    if (this_present_flag || that_present_flag) {
      if (!(this_present_flag && that_present_flag))
        return false;
      if (this.flag != that.flag)
        return false;
    }

    boolean this_present_createTime = true;
    boolean that_present_createTime = true;
    if (this_present_createTime || that_present_createTime) {
      if (!(this_present_createTime && that_present_createTime))
        return false;
      if (this.createTime != that.createTime)
        return false;
    }

    boolean this_present_createUserId = true && this.isSetCreateUserId();
    boolean that_present_createUserId = true && that.isSetCreateUserId();
    if (this_present_createUserId || that_present_createUserId) {
      if (!(this_present_createUserId && that_present_createUserId))
        return false;
      if (!this.createUserId.equals(that.createUserId))
        return false;
    }

    boolean this_present_lastEditTime = true;
    boolean that_present_lastEditTime = true;
    if (this_present_lastEditTime || that_present_lastEditTime) {
      if (!(this_present_lastEditTime && that_present_lastEditTime))
        return false;
      if (this.lastEditTime != that.lastEditTime)
        return false;
    }

    boolean this_present_lastEditUserId = true && this.isSetLastEditUserId();
    boolean that_present_lastEditUserId = true && that.isSetLastEditUserId();
    if (this_present_lastEditUserId || that_present_lastEditUserId) {
      if (!(this_present_lastEditUserId && that_present_lastEditUserId))
        return false;
      if (!this.lastEditUserId.equals(that.lastEditUserId))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + pkId;

    hashCode = hashCode * 8191 + ((isSetBookNo()) ? 131071 : 524287);
    if (isSetBookNo())
      hashCode = hashCode * 8191 + bookNo.hashCode();

    hashCode = hashCode * 8191 + ((isSetBookName()) ? 131071 : 524287);
    if (isSetBookName())
      hashCode = hashCode * 8191 + bookName.hashCode();

    hashCode = hashCode * 8191 + ((isSetAuthor()) ? 131071 : 524287);
    if (isSetAuthor())
      hashCode = hashCode * 8191 + author.hashCode();

    hashCode = hashCode * 8191 + flag;

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(createTime);

    hashCode = hashCode * 8191 + ((isSetCreateUserId()) ? 131071 : 524287);
    if (isSetCreateUserId())
      hashCode = hashCode * 8191 + createUserId.hashCode();

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(lastEditTime);

    hashCode = hashCode * 8191 + ((isSetLastEditUserId()) ? 131071 : 524287);
    if (isSetLastEditUserId())
      hashCode = hashCode * 8191 + lastEditUserId.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(BookInfo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetPkId()).compareTo(other.isSetPkId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPkId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.pkId, other.pkId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBookNo()).compareTo(other.isSetBookNo());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBookNo()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bookNo, other.bookNo);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBookName()).compareTo(other.isSetBookName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBookName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bookName, other.bookName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetAuthor()).compareTo(other.isSetAuthor());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuthor()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.author, other.author);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFlag()).compareTo(other.isSetFlag());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFlag()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.flag, other.flag);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTime()).compareTo(other.isSetCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTime, other.createTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateUserId()).compareTo(other.isSetCreateUserId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateUserId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createUserId, other.createUserId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLastEditTime()).compareTo(other.isSetLastEditTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLastEditTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.lastEditTime, other.lastEditTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLastEditUserId()).compareTo(other.isSetLastEditUserId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLastEditUserId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.lastEditUserId, other.lastEditUserId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("BookInfo(");
    boolean first = true;

    sb.append("pkId:");
    sb.append(this.pkId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("bookNo:");
    if (this.bookNo == null) {
      sb.append("null");
    } else {
      sb.append(this.bookNo);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("bookName:");
    if (this.bookName == null) {
      sb.append("null");
    } else {
      sb.append(this.bookName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("author:");
    if (this.author == null) {
      sb.append("null");
    } else {
      sb.append(this.author);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("flag:");
    sb.append(this.flag);
    first = false;
    if (!first) sb.append(", ");
    sb.append("createTime:");
    sb.append(this.createTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("createUserId:");
    if (this.createUserId == null) {
      sb.append("null");
    } else {
      sb.append(this.createUserId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("lastEditTime:");
    sb.append(this.lastEditTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("lastEditUserId:");
    if (this.lastEditUserId == null) {
      sb.append("null");
    } else {
      sb.append(this.lastEditUserId);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class BookInfoStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public BookInfoStandardScheme getScheme() {
      return new BookInfoStandardScheme();
    }
  }

  private static class BookInfoStandardScheme extends org.apache.thrift.scheme.StandardScheme<BookInfo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, BookInfo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // PK_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.pkId = iprot.readI32();
              struct.setPkIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // BOOK_NO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.bookNo = iprot.readString();
              struct.setBookNoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // BOOK_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.bookName = iprot.readString();
              struct.setBookNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // AUTHOR
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.author = iprot.readString();
              struct.setAuthorIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // FLAG
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.flag = iprot.readI32();
              struct.setFlagIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.createTime = iprot.readI64();
              struct.setCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // CREATE_USER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.createUserId = iprot.readString();
              struct.setCreateUserIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // LAST_EDIT_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.lastEditTime = iprot.readI64();
              struct.setLastEditTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // LAST_EDIT_USER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.lastEditUserId = iprot.readString();
              struct.setLastEditUserIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, BookInfo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(PK_ID_FIELD_DESC);
      oprot.writeI32(struct.pkId);
      oprot.writeFieldEnd();
      if (struct.bookNo != null) {
        oprot.writeFieldBegin(BOOK_NO_FIELD_DESC);
        oprot.writeString(struct.bookNo);
        oprot.writeFieldEnd();
      }
      if (struct.bookName != null) {
        oprot.writeFieldBegin(BOOK_NAME_FIELD_DESC);
        oprot.writeString(struct.bookName);
        oprot.writeFieldEnd();
      }
      if (struct.author != null) {
        oprot.writeFieldBegin(AUTHOR_FIELD_DESC);
        oprot.writeString(struct.author);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(FLAG_FIELD_DESC);
      oprot.writeI32(struct.flag);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
      oprot.writeI64(struct.createTime);
      oprot.writeFieldEnd();
      if (struct.createUserId != null) {
        oprot.writeFieldBegin(CREATE_USER_ID_FIELD_DESC);
        oprot.writeString(struct.createUserId);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(LAST_EDIT_TIME_FIELD_DESC);
      oprot.writeI64(struct.lastEditTime);
      oprot.writeFieldEnd();
      if (struct.lastEditUserId != null) {
        oprot.writeFieldBegin(LAST_EDIT_USER_ID_FIELD_DESC);
        oprot.writeString(struct.lastEditUserId);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class BookInfoTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public BookInfoTupleScheme getScheme() {
      return new BookInfoTupleScheme();
    }
  }

  private static class BookInfoTupleScheme extends org.apache.thrift.scheme.TupleScheme<BookInfo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, BookInfo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetPkId()) {
        optionals.set(0);
      }
      if (struct.isSetBookNo()) {
        optionals.set(1);
      }
      if (struct.isSetBookName()) {
        optionals.set(2);
      }
      if (struct.isSetAuthor()) {
        optionals.set(3);
      }
      if (struct.isSetFlag()) {
        optionals.set(4);
      }
      if (struct.isSetCreateTime()) {
        optionals.set(5);
      }
      if (struct.isSetCreateUserId()) {
        optionals.set(6);
      }
      if (struct.isSetLastEditTime()) {
        optionals.set(7);
      }
      if (struct.isSetLastEditUserId()) {
        optionals.set(8);
      }
      oprot.writeBitSet(optionals, 9);
      if (struct.isSetPkId()) {
        oprot.writeI32(struct.pkId);
      }
      if (struct.isSetBookNo()) {
        oprot.writeString(struct.bookNo);
      }
      if (struct.isSetBookName()) {
        oprot.writeString(struct.bookName);
      }
      if (struct.isSetAuthor()) {
        oprot.writeString(struct.author);
      }
      if (struct.isSetFlag()) {
        oprot.writeI32(struct.flag);
      }
      if (struct.isSetCreateTime()) {
        oprot.writeI64(struct.createTime);
      }
      if (struct.isSetCreateUserId()) {
        oprot.writeString(struct.createUserId);
      }
      if (struct.isSetLastEditTime()) {
        oprot.writeI64(struct.lastEditTime);
      }
      if (struct.isSetLastEditUserId()) {
        oprot.writeString(struct.lastEditUserId);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, BookInfo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(9);
      if (incoming.get(0)) {
        struct.pkId = iprot.readI32();
        struct.setPkIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.bookNo = iprot.readString();
        struct.setBookNoIsSet(true);
      }
      if (incoming.get(2)) {
        struct.bookName = iprot.readString();
        struct.setBookNameIsSet(true);
      }
      if (incoming.get(3)) {
        struct.author = iprot.readString();
        struct.setAuthorIsSet(true);
      }
      if (incoming.get(4)) {
        struct.flag = iprot.readI32();
        struct.setFlagIsSet(true);
      }
      if (incoming.get(5)) {
        struct.createTime = iprot.readI64();
        struct.setCreateTimeIsSet(true);
      }
      if (incoming.get(6)) {
        struct.createUserId = iprot.readString();
        struct.setCreateUserIdIsSet(true);
      }
      if (incoming.get(7)) {
        struct.lastEditTime = iprot.readI64();
        struct.setLastEditTimeIsSet(true);
      }
      if (incoming.get(8)) {
        struct.lastEditUserId = iprot.readString();
        struct.setLastEditUserIdIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

