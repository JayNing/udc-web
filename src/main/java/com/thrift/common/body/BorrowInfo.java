/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.thrift.common.body;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2018-05-09")
public class BorrowInfo implements org.apache.thrift.TBase<BorrowInfo, BorrowInfo._Fields>, java.io.Serializable, Cloneable, Comparable<BorrowInfo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("BorrowInfo");

  private static final org.apache.thrift.protocol.TField BORROW_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("borrowId", org.apache.thrift.protocol.TType.I32, (short)1);
  private static final org.apache.thrift.protocol.TField USER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("userId", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField BK_PK_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("bkPkId", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField FLAG_FIELD_DESC = new org.apache.thrift.protocol.TField("flag", org.apache.thrift.protocol.TType.I32, (short)4);
  private static final org.apache.thrift.protocol.TField BORROW_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("borrowTime", org.apache.thrift.protocol.TType.I64, (short)5);
  private static final org.apache.thrift.protocol.TField BORROW_DAYS_FIELD_DESC = new org.apache.thrift.protocol.TField("borrowDays", org.apache.thrift.protocol.TType.I32, (short)6);
  private static final org.apache.thrift.protocol.TField GIVEBACK_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("givebackTime", org.apache.thrift.protocol.TType.I64, (short)7);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("createTime", org.apache.thrift.protocol.TType.I64, (short)8);
  private static final org.apache.thrift.protocol.TField CREATE_USER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("createUserId", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField LAST_EDIT_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("lastEditTime", org.apache.thrift.protocol.TType.I64, (short)10);
  private static final org.apache.thrift.protocol.TField LAST_EDIT_USER_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("lastEditUserId", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField REMARK_FIELD_DESC = new org.apache.thrift.protocol.TField("remark", org.apache.thrift.protocol.TType.STRING, (short)12);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new BorrowInfoStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new BorrowInfoTupleSchemeFactory();

  public int borrowId; // required
  public int userId; // required
  public int bkPkId; // required
  public int flag; // required
  public long borrowTime; // required
  public int borrowDays; // required
  public long givebackTime; // required
  public long createTime; // required
  public String createUserId; // required
  public long lastEditTime; // required
  public String lastEditUserId; // required
  public String remark; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    BORROW_ID((short)1, "borrowId"),
    USER_ID((short)2, "userId"),
    BK_PK_ID((short)3, "bkPkId"),
    FLAG((short)4, "flag"),
    BORROW_TIME((short)5, "borrowTime"),
    BORROW_DAYS((short)6, "borrowDays"),
    GIVEBACK_TIME((short)7, "givebackTime"),
    CREATE_TIME((short)8, "createTime"),
    CREATE_USER_ID((short)9, "createUserId"),
    LAST_EDIT_TIME((short)10, "lastEditTime"),
    LAST_EDIT_USER_ID((short)11, "lastEditUserId"),
    REMARK((short)12, "remark");

    private static final java.util.Map<String, _Fields> byName = new java.util.HashMap<String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // BORROW_ID
          return BORROW_ID;
        case 2: // USER_ID
          return USER_ID;
        case 3: // BK_PK_ID
          return BK_PK_ID;
        case 4: // FLAG
          return FLAG;
        case 5: // BORROW_TIME
          return BORROW_TIME;
        case 6: // BORROW_DAYS
          return BORROW_DAYS;
        case 7: // GIVEBACK_TIME
          return GIVEBACK_TIME;
        case 8: // CREATE_TIME
          return CREATE_TIME;
        case 9: // CREATE_USER_ID
          return CREATE_USER_ID;
        case 10: // LAST_EDIT_TIME
          return LAST_EDIT_TIME;
        case 11: // LAST_EDIT_USER_ID
          return LAST_EDIT_USER_ID;
        case 12: // REMARK
          return REMARK;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __BORROWID_ISSET_ID = 0;
  private static final int __USERID_ISSET_ID = 1;
  private static final int __BKPKID_ISSET_ID = 2;
  private static final int __FLAG_ISSET_ID = 3;
  private static final int __BORROWTIME_ISSET_ID = 4;
  private static final int __BORROWDAYS_ISSET_ID = 5;
  private static final int __GIVEBACKTIME_ISSET_ID = 6;
  private static final int __CREATETIME_ISSET_ID = 7;
  private static final int __LASTEDITTIME_ISSET_ID = 8;
  private short __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.BORROW_ID, new org.apache.thrift.meta_data.FieldMetaData("borrowId", org.apache.thrift.TFieldRequirementType.DEFAULT,
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.USER_ID, new org.apache.thrift.meta_data.FieldMetaData("userId", org.apache.thrift.TFieldRequirementType.DEFAULT,
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.BK_PK_ID, new org.apache.thrift.meta_data.FieldMetaData("bkPkId", org.apache.thrift.TFieldRequirementType.DEFAULT,
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.FLAG, new org.apache.thrift.meta_data.FieldMetaData("flag", org.apache.thrift.TFieldRequirementType.DEFAULT,
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.BORROW_TIME, new org.apache.thrift.meta_data.FieldMetaData("borrowTime", org.apache.thrift.TFieldRequirementType.DEFAULT,
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.BORROW_DAYS, new org.apache.thrift.meta_data.FieldMetaData("borrowDays", org.apache.thrift.TFieldRequirementType.DEFAULT,
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.GIVEBACK_TIME, new org.apache.thrift.meta_data.FieldMetaData("givebackTime", org.apache.thrift.TFieldRequirementType.DEFAULT,
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("createTime", org.apache.thrift.TFieldRequirementType.DEFAULT,
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CREATE_USER_ID, new org.apache.thrift.meta_data.FieldMetaData("createUserId", org.apache.thrift.TFieldRequirementType.DEFAULT,
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.LAST_EDIT_TIME, new org.apache.thrift.meta_data.FieldMetaData("lastEditTime", org.apache.thrift.TFieldRequirementType.DEFAULT,
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.LAST_EDIT_USER_ID, new org.apache.thrift.meta_data.FieldMetaData("lastEditUserId", org.apache.thrift.TFieldRequirementType.DEFAULT,
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.REMARK, new org.apache.thrift.meta_data.FieldMetaData("remark", org.apache.thrift.TFieldRequirementType.DEFAULT,
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(BorrowInfo.class, metaDataMap);
  }

  public BorrowInfo() {
  }

  public BorrowInfo(
    int borrowId,
    int userId,
    int bkPkId,
    int flag,
    long borrowTime,
    int borrowDays,
    long givebackTime,
    long createTime,
    String createUserId,
    long lastEditTime,
    String lastEditUserId,
    String remark)
  {
    this();
    this.borrowId = borrowId;
    setBorrowIdIsSet(true);
    this.userId = userId;
    setUserIdIsSet(true);
    this.bkPkId = bkPkId;
    setBkPkIdIsSet(true);
    this.flag = flag;
    setFlagIsSet(true);
    this.borrowTime = borrowTime;
    setBorrowTimeIsSet(true);
    this.borrowDays = borrowDays;
    setBorrowDaysIsSet(true);
    this.givebackTime = givebackTime;
    setGivebackTimeIsSet(true);
    this.createTime = createTime;
    setCreateTimeIsSet(true);
    this.createUserId = createUserId;
    this.lastEditTime = lastEditTime;
    setLastEditTimeIsSet(true);
    this.lastEditUserId = lastEditUserId;
    this.remark = remark;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public BorrowInfo(BorrowInfo other) {
    __isset_bitfield = other.__isset_bitfield;
    this.borrowId = other.borrowId;
    this.userId = other.userId;
    this.bkPkId = other.bkPkId;
    this.flag = other.flag;
    this.borrowTime = other.borrowTime;
    this.borrowDays = other.borrowDays;
    this.givebackTime = other.givebackTime;
    this.createTime = other.createTime;
    if (other.isSetCreateUserId()) {
      this.createUserId = other.createUserId;
    }
    this.lastEditTime = other.lastEditTime;
    if (other.isSetLastEditUserId()) {
      this.lastEditUserId = other.lastEditUserId;
    }
    if (other.isSetRemark()) {
      this.remark = other.remark;
    }
  }

  public BorrowInfo deepCopy() {
    return new BorrowInfo(this);
  }

  @Override
  public void clear() {
    setBorrowIdIsSet(false);
    this.borrowId = 0;
    setUserIdIsSet(false);
    this.userId = 0;
    setBkPkIdIsSet(false);
    this.bkPkId = 0;
    setFlagIsSet(false);
    this.flag = 0;
    setBorrowTimeIsSet(false);
    this.borrowTime = 0;
    setBorrowDaysIsSet(false);
    this.borrowDays = 0;
    setGivebackTimeIsSet(false);
    this.givebackTime = 0;
    setCreateTimeIsSet(false);
    this.createTime = 0;
    this.createUserId = null;
    setLastEditTimeIsSet(false);
    this.lastEditTime = 0;
    this.lastEditUserId = null;
    this.remark = null;
  }

  public int getBorrowId() {
    return this.borrowId;
  }

  public BorrowInfo setBorrowId(int borrowId) {
    this.borrowId = borrowId;
    setBorrowIdIsSet(true);
    return this;
  }

  public void unsetBorrowId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __BORROWID_ISSET_ID);
  }

  /** Returns true if field borrowId is set (has been assigned a value) and false otherwise */
  public boolean isSetBorrowId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __BORROWID_ISSET_ID);
  }

  public void setBorrowIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __BORROWID_ISSET_ID, value);
  }

  public int getUserId() {
    return this.userId;
  }

  public BorrowInfo setUserId(int userId) {
    this.userId = userId;
    setUserIdIsSet(true);
    return this;
  }

  public void unsetUserId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __USERID_ISSET_ID);
  }

  /** Returns true if field userId is set (has been assigned a value) and false otherwise */
  public boolean isSetUserId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __USERID_ISSET_ID);
  }

  public void setUserIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __USERID_ISSET_ID, value);
  }

  public int getBkPkId() {
    return this.bkPkId;
  }

  public BorrowInfo setBkPkId(int bkPkId) {
    this.bkPkId = bkPkId;
    setBkPkIdIsSet(true);
    return this;
  }

  public void unsetBkPkId() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __BKPKID_ISSET_ID);
  }

  /** Returns true if field bkPkId is set (has been assigned a value) and false otherwise */
  public boolean isSetBkPkId() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __BKPKID_ISSET_ID);
  }

  public void setBkPkIdIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __BKPKID_ISSET_ID, value);
  }

  public int getFlag() {
    return this.flag;
  }

  public BorrowInfo setFlag(int flag) {
    this.flag = flag;
    setFlagIsSet(true);
    return this;
  }

  public void unsetFlag() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __FLAG_ISSET_ID);
  }

  /** Returns true if field flag is set (has been assigned a value) and false otherwise */
  public boolean isSetFlag() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __FLAG_ISSET_ID);
  }

  public void setFlagIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __FLAG_ISSET_ID, value);
  }

  public long getBorrowTime() {
    return this.borrowTime;
  }

  public BorrowInfo setBorrowTime(long borrowTime) {
    this.borrowTime = borrowTime;
    setBorrowTimeIsSet(true);
    return this;
  }

  public void unsetBorrowTime() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __BORROWTIME_ISSET_ID);
  }

  /** Returns true if field borrowTime is set (has been assigned a value) and false otherwise */
  public boolean isSetBorrowTime() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __BORROWTIME_ISSET_ID);
  }

  public void setBorrowTimeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __BORROWTIME_ISSET_ID, value);
  }

  public int getBorrowDays() {
    return this.borrowDays;
  }

  public BorrowInfo setBorrowDays(int borrowDays) {
    this.borrowDays = borrowDays;
    setBorrowDaysIsSet(true);
    return this;
  }

  public void unsetBorrowDays() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __BORROWDAYS_ISSET_ID);
  }

  /** Returns true if field borrowDays is set (has been assigned a value) and false otherwise */
  public boolean isSetBorrowDays() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __BORROWDAYS_ISSET_ID);
  }

  public void setBorrowDaysIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __BORROWDAYS_ISSET_ID, value);
  }

  public long getGivebackTime() {
    return this.givebackTime;
  }

  public BorrowInfo setGivebackTime(long givebackTime) {
    this.givebackTime = givebackTime;
    setGivebackTimeIsSet(true);
    return this;
  }

  public void unsetGivebackTime() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __GIVEBACKTIME_ISSET_ID);
  }

  /** Returns true if field givebackTime is set (has been assigned a value) and false otherwise */
  public boolean isSetGivebackTime() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __GIVEBACKTIME_ISSET_ID);
  }

  public void setGivebackTimeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __GIVEBACKTIME_ISSET_ID, value);
  }

  public long getCreateTime() {
    return this.createTime;
  }

  public BorrowInfo setCreateTime(long createTime) {
    this.createTime = createTime;
    setCreateTimeIsSet(true);
    return this;
  }

  public void unsetCreateTime() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  /** Returns true if field createTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTime() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __CREATETIME_ISSET_ID);
  }

  public void setCreateTimeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __CREATETIME_ISSET_ID, value);
  }

  public String getCreateUserId() {
    return this.createUserId;
  }

  public BorrowInfo setCreateUserId(String createUserId) {
    this.createUserId = createUserId;
    return this;
  }

  public void unsetCreateUserId() {
    this.createUserId = null;
  }

  /** Returns true if field createUserId is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateUserId() {
    return this.createUserId != null;
  }

  public void setCreateUserIdIsSet(boolean value) {
    if (!value) {
      this.createUserId = null;
    }
  }

  public long getLastEditTime() {
    return this.lastEditTime;
  }

  public BorrowInfo setLastEditTime(long lastEditTime) {
    this.lastEditTime = lastEditTime;
    setLastEditTimeIsSet(true);
    return this;
  }

  public void unsetLastEditTime() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __LASTEDITTIME_ISSET_ID);
  }

  /** Returns true if field lastEditTime is set (has been assigned a value) and false otherwise */
  public boolean isSetLastEditTime() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __LASTEDITTIME_ISSET_ID);
  }

  public void setLastEditTimeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __LASTEDITTIME_ISSET_ID, value);
  }

  public String getLastEditUserId() {
    return this.lastEditUserId;
  }

  public BorrowInfo setLastEditUserId(String lastEditUserId) {
    this.lastEditUserId = lastEditUserId;
    return this;
  }

  public void unsetLastEditUserId() {
    this.lastEditUserId = null;
  }

  /** Returns true if field lastEditUserId is set (has been assigned a value) and false otherwise */
  public boolean isSetLastEditUserId() {
    return this.lastEditUserId != null;
  }

  public void setLastEditUserIdIsSet(boolean value) {
    if (!value) {
      this.lastEditUserId = null;
    }
  }

  public String getRemark() {
    return this.remark;
  }

  public BorrowInfo setRemark(String remark) {
    this.remark = remark;
    return this;
  }

  public void unsetRemark() {
    this.remark = null;
  }

  /** Returns true if field remark is set (has been assigned a value) and false otherwise */
  public boolean isSetRemark() {
    return this.remark != null;
  }

  public void setRemarkIsSet(boolean value) {
    if (!value) {
      this.remark = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case BORROW_ID:
      if (value == null) {
        unsetBorrowId();
      } else {
        setBorrowId((Integer)value);
      }
      break;

    case USER_ID:
      if (value == null) {
        unsetUserId();
      } else {
        setUserId((Integer)value);
      }
      break;

    case BK_PK_ID:
      if (value == null) {
        unsetBkPkId();
      } else {
        setBkPkId((Integer)value);
      }
      break;

    case FLAG:
      if (value == null) {
        unsetFlag();
      } else {
        setFlag((Integer)value);
      }
      break;

    case BORROW_TIME:
      if (value == null) {
        unsetBorrowTime();
      } else {
        setBorrowTime((Long)value);
      }
      break;

    case BORROW_DAYS:
      if (value == null) {
        unsetBorrowDays();
      } else {
        setBorrowDays((Integer)value);
      }
      break;

    case GIVEBACK_TIME:
      if (value == null) {
        unsetGivebackTime();
      } else {
        setGivebackTime((Long)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreateTime();
      } else {
        setCreateTime((Long)value);
      }
      break;

    case CREATE_USER_ID:
      if (value == null) {
        unsetCreateUserId();
      } else {
        setCreateUserId((String)value);
      }
      break;

    case LAST_EDIT_TIME:
      if (value == null) {
        unsetLastEditTime();
      } else {
        setLastEditTime((Long)value);
      }
      break;

    case LAST_EDIT_USER_ID:
      if (value == null) {
        unsetLastEditUserId();
      } else {
        setLastEditUserId((String)value);
      }
      break;

    case REMARK:
      if (value == null) {
        unsetRemark();
      } else {
        setRemark((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case BORROW_ID:
      return getBorrowId();

    case USER_ID:
      return getUserId();

    case BK_PK_ID:
      return getBkPkId();

    case FLAG:
      return getFlag();

    case BORROW_TIME:
      return getBorrowTime();

    case BORROW_DAYS:
      return getBorrowDays();

    case GIVEBACK_TIME:
      return getGivebackTime();

    case CREATE_TIME:
      return getCreateTime();

    case CREATE_USER_ID:
      return getCreateUserId();

    case LAST_EDIT_TIME:
      return getLastEditTime();

    case LAST_EDIT_USER_ID:
      return getLastEditUserId();

    case REMARK:
      return getRemark();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case BORROW_ID:
      return isSetBorrowId();
    case USER_ID:
      return isSetUserId();
    case BK_PK_ID:
      return isSetBkPkId();
    case FLAG:
      return isSetFlag();
    case BORROW_TIME:
      return isSetBorrowTime();
    case BORROW_DAYS:
      return isSetBorrowDays();
    case GIVEBACK_TIME:
      return isSetGivebackTime();
    case CREATE_TIME:
      return isSetCreateTime();
    case CREATE_USER_ID:
      return isSetCreateUserId();
    case LAST_EDIT_TIME:
      return isSetLastEditTime();
    case LAST_EDIT_USER_ID:
      return isSetLastEditUserId();
    case REMARK:
      return isSetRemark();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof BorrowInfo)
      return this.equals((BorrowInfo)that);
    return false;
  }

  public boolean equals(BorrowInfo that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_borrowId = true;
    boolean that_present_borrowId = true;
    if (this_present_borrowId || that_present_borrowId) {
      if (!(this_present_borrowId && that_present_borrowId))
        return false;
      if (this.borrowId != that.borrowId)
        return false;
    }

    boolean this_present_userId = true;
    boolean that_present_userId = true;
    if (this_present_userId || that_present_userId) {
      if (!(this_present_userId && that_present_userId))
        return false;
      if (this.userId != that.userId)
        return false;
    }

    boolean this_present_bkPkId = true;
    boolean that_present_bkPkId = true;
    if (this_present_bkPkId || that_present_bkPkId) {
      if (!(this_present_bkPkId && that_present_bkPkId))
        return false;
      if (this.bkPkId != that.bkPkId)
        return false;
    }

    boolean this_present_flag = true;
    boolean that_present_flag = true;
    if (this_present_flag || that_present_flag) {
      if (!(this_present_flag && that_present_flag))
        return false;
      if (this.flag != that.flag)
        return false;
    }

    boolean this_present_borrowTime = true;
    boolean that_present_borrowTime = true;
    if (this_present_borrowTime || that_present_borrowTime) {
      if (!(this_present_borrowTime && that_present_borrowTime))
        return false;
      if (this.borrowTime != that.borrowTime)
        return false;
    }

    boolean this_present_borrowDays = true;
    boolean that_present_borrowDays = true;
    if (this_present_borrowDays || that_present_borrowDays) {
      if (!(this_present_borrowDays && that_present_borrowDays))
        return false;
      if (this.borrowDays != that.borrowDays)
        return false;
    }

    boolean this_present_givebackTime = true;
    boolean that_present_givebackTime = true;
    if (this_present_givebackTime || that_present_givebackTime) {
      if (!(this_present_givebackTime && that_present_givebackTime))
        return false;
      if (this.givebackTime != that.givebackTime)
        return false;
    }

    boolean this_present_createTime = true;
    boolean that_present_createTime = true;
    if (this_present_createTime || that_present_createTime) {
      if (!(this_present_createTime && that_present_createTime))
        return false;
      if (this.createTime != that.createTime)
        return false;
    }

    boolean this_present_createUserId = true && this.isSetCreateUserId();
    boolean that_present_createUserId = true && that.isSetCreateUserId();
    if (this_present_createUserId || that_present_createUserId) {
      if (!(this_present_createUserId && that_present_createUserId))
        return false;
      if (!this.createUserId.equals(that.createUserId))
        return false;
    }

    boolean this_present_lastEditTime = true;
    boolean that_present_lastEditTime = true;
    if (this_present_lastEditTime || that_present_lastEditTime) {
      if (!(this_present_lastEditTime && that_present_lastEditTime))
        return false;
      if (this.lastEditTime != that.lastEditTime)
        return false;
    }

    boolean this_present_lastEditUserId = true && this.isSetLastEditUserId();
    boolean that_present_lastEditUserId = true && that.isSetLastEditUserId();
    if (this_present_lastEditUserId || that_present_lastEditUserId) {
      if (!(this_present_lastEditUserId && that_present_lastEditUserId))
        return false;
      if (!this.lastEditUserId.equals(that.lastEditUserId))
        return false;
    }

    boolean this_present_remark = true && this.isSetRemark();
    boolean that_present_remark = true && that.isSetRemark();
    if (this_present_remark || that_present_remark) {
      if (!(this_present_remark && that_present_remark))
        return false;
      if (!this.remark.equals(that.remark))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + borrowId;

    hashCode = hashCode * 8191 + userId;

    hashCode = hashCode * 8191 + bkPkId;

    hashCode = hashCode * 8191 + flag;

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(borrowTime);

    hashCode = hashCode * 8191 + borrowDays;

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(givebackTime);

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(createTime);

    hashCode = hashCode * 8191 + ((isSetCreateUserId()) ? 131071 : 524287);
    if (isSetCreateUserId())
      hashCode = hashCode * 8191 + createUserId.hashCode();

    hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(lastEditTime);

    hashCode = hashCode * 8191 + ((isSetLastEditUserId()) ? 131071 : 524287);
    if (isSetLastEditUserId())
      hashCode = hashCode * 8191 + lastEditUserId.hashCode();

    hashCode = hashCode * 8191 + ((isSetRemark()) ? 131071 : 524287);
    if (isSetRemark())
      hashCode = hashCode * 8191 + remark.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(BorrowInfo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetBorrowId()).compareTo(other.isSetBorrowId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBorrowId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.borrowId, other.borrowId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetUserId()).compareTo(other.isSetUserId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUserId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.userId, other.userId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBkPkId()).compareTo(other.isSetBkPkId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBkPkId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.bkPkId, other.bkPkId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetFlag()).compareTo(other.isSetFlag());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFlag()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.flag, other.flag);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBorrowTime()).compareTo(other.isSetBorrowTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBorrowTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.borrowTime, other.borrowTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetBorrowDays()).compareTo(other.isSetBorrowDays());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBorrowDays()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.borrowDays, other.borrowDays);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetGivebackTime()).compareTo(other.isSetGivebackTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetGivebackTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.givebackTime, other.givebackTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateTime()).compareTo(other.isSetCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTime, other.createTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetCreateUserId()).compareTo(other.isSetCreateUserId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateUserId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createUserId, other.createUserId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLastEditTime()).compareTo(other.isSetLastEditTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLastEditTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.lastEditTime, other.lastEditTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetLastEditUserId()).compareTo(other.isSetLastEditUserId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLastEditUserId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.lastEditUserId, other.lastEditUserId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetRemark()).compareTo(other.isSetRemark());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRemark()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.remark, other.remark);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("BorrowInfo(");
    boolean first = true;

    sb.append("borrowId:");
    sb.append(this.borrowId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("userId:");
    sb.append(this.userId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("bkPkId:");
    sb.append(this.bkPkId);
    first = false;
    if (!first) sb.append(", ");
    sb.append("flag:");
    sb.append(this.flag);
    first = false;
    if (!first) sb.append(", ");
    sb.append("borrowTime:");
    sb.append(this.borrowTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("borrowDays:");
    sb.append(this.borrowDays);
    first = false;
    if (!first) sb.append(", ");
    sb.append("givebackTime:");
    sb.append(this.givebackTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("createTime:");
    sb.append(this.createTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("createUserId:");
    if (this.createUserId == null) {
      sb.append("null");
    } else {
      sb.append(this.createUserId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("lastEditTime:");
    sb.append(this.lastEditTime);
    first = false;
    if (!first) sb.append(", ");
    sb.append("lastEditUserId:");
    if (this.lastEditUserId == null) {
      sb.append("null");
    } else {
      sb.append(this.lastEditUserId);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("remark:");
    if (this.remark == null) {
      sb.append("null");
    } else {
      sb.append(this.remark);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class BorrowInfoStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public BorrowInfoStandardScheme getScheme() {
      return new BorrowInfoStandardScheme();
    }
  }

  private static class BorrowInfoStandardScheme extends org.apache.thrift.scheme.StandardScheme<BorrowInfo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, BorrowInfo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // BORROW_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.borrowId = iprot.readI32();
              struct.setBorrowIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // USER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.userId = iprot.readI32();
              struct.setUserIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // BK_PK_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.bkPkId = iprot.readI32();
              struct.setBkPkIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // FLAG
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.flag = iprot.readI32();
              struct.setFlagIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // BORROW_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.borrowTime = iprot.readI64();
              struct.setBorrowTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // BORROW_DAYS
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.borrowDays = iprot.readI32();
              struct.setBorrowDaysIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // GIVEBACK_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.givebackTime = iprot.readI64();
              struct.setGivebackTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.createTime = iprot.readI64();
              struct.setCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // CREATE_USER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.createUserId = iprot.readString();
              struct.setCreateUserIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // LAST_EDIT_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.lastEditTime = iprot.readI64();
              struct.setLastEditTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // LAST_EDIT_USER_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.lastEditUserId = iprot.readString();
              struct.setLastEditUserIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // REMARK
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.remark = iprot.readString();
              struct.setRemarkIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, BorrowInfo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(BORROW_ID_FIELD_DESC);
      oprot.writeI32(struct.borrowId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(USER_ID_FIELD_DESC);
      oprot.writeI32(struct.userId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(BK_PK_ID_FIELD_DESC);
      oprot.writeI32(struct.bkPkId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(FLAG_FIELD_DESC);
      oprot.writeI32(struct.flag);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(BORROW_TIME_FIELD_DESC);
      oprot.writeI64(struct.borrowTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(BORROW_DAYS_FIELD_DESC);
      oprot.writeI32(struct.borrowDays);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(GIVEBACK_TIME_FIELD_DESC);
      oprot.writeI64(struct.givebackTime);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
      oprot.writeI64(struct.createTime);
      oprot.writeFieldEnd();
      if (struct.createUserId != null) {
        oprot.writeFieldBegin(CREATE_USER_ID_FIELD_DESC);
        oprot.writeString(struct.createUserId);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(LAST_EDIT_TIME_FIELD_DESC);
      oprot.writeI64(struct.lastEditTime);
      oprot.writeFieldEnd();
      if (struct.lastEditUserId != null) {
        oprot.writeFieldBegin(LAST_EDIT_USER_ID_FIELD_DESC);
        oprot.writeString(struct.lastEditUserId);
        oprot.writeFieldEnd();
      }
      if (struct.remark != null) {
        oprot.writeFieldBegin(REMARK_FIELD_DESC);
        oprot.writeString(struct.remark);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class BorrowInfoTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public BorrowInfoTupleScheme getScheme() {
      return new BorrowInfoTupleScheme();
    }
  }

  private static class BorrowInfoTupleScheme extends org.apache.thrift.scheme.TupleScheme<BorrowInfo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, BorrowInfo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetBorrowId()) {
        optionals.set(0);
      }
      if (struct.isSetUserId()) {
        optionals.set(1);
      }
      if (struct.isSetBkPkId()) {
        optionals.set(2);
      }
      if (struct.isSetFlag()) {
        optionals.set(3);
      }
      if (struct.isSetBorrowTime()) {
        optionals.set(4);
      }
      if (struct.isSetBorrowDays()) {
        optionals.set(5);
      }
      if (struct.isSetGivebackTime()) {
        optionals.set(6);
      }
      if (struct.isSetCreateTime()) {
        optionals.set(7);
      }
      if (struct.isSetCreateUserId()) {
        optionals.set(8);
      }
      if (struct.isSetLastEditTime()) {
        optionals.set(9);
      }
      if (struct.isSetLastEditUserId()) {
        optionals.set(10);
      }
      if (struct.isSetRemark()) {
        optionals.set(11);
      }
      oprot.writeBitSet(optionals, 12);
      if (struct.isSetBorrowId()) {
        oprot.writeI32(struct.borrowId);
      }
      if (struct.isSetUserId()) {
        oprot.writeI32(struct.userId);
      }
      if (struct.isSetBkPkId()) {
        oprot.writeI32(struct.bkPkId);
      }
      if (struct.isSetFlag()) {
        oprot.writeI32(struct.flag);
      }
      if (struct.isSetBorrowTime()) {
        oprot.writeI64(struct.borrowTime);
      }
      if (struct.isSetBorrowDays()) {
        oprot.writeI32(struct.borrowDays);
      }
      if (struct.isSetGivebackTime()) {
        oprot.writeI64(struct.givebackTime);
      }
      if (struct.isSetCreateTime()) {
        oprot.writeI64(struct.createTime);
      }
      if (struct.isSetCreateUserId()) {
        oprot.writeString(struct.createUserId);
      }
      if (struct.isSetLastEditTime()) {
        oprot.writeI64(struct.lastEditTime);
      }
      if (struct.isSetLastEditUserId()) {
        oprot.writeString(struct.lastEditUserId);
      }
      if (struct.isSetRemark()) {
        oprot.writeString(struct.remark);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, BorrowInfo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(12);
      if (incoming.get(0)) {
        struct.borrowId = iprot.readI32();
        struct.setBorrowIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.userId = iprot.readI32();
        struct.setUserIdIsSet(true);
      }
      if (incoming.get(2)) {
        struct.bkPkId = iprot.readI32();
        struct.setBkPkIdIsSet(true);
      }
      if (incoming.get(3)) {
        struct.flag = iprot.readI32();
        struct.setFlagIsSet(true);
      }
      if (incoming.get(4)) {
        struct.borrowTime = iprot.readI64();
        struct.setBorrowTimeIsSet(true);
      }
      if (incoming.get(5)) {
        struct.borrowDays = iprot.readI32();
        struct.setBorrowDaysIsSet(true);
      }
      if (incoming.get(6)) {
        struct.givebackTime = iprot.readI64();
        struct.setGivebackTimeIsSet(true);
      }
      if (incoming.get(7)) {
        struct.createTime = iprot.readI64();
        struct.setCreateTimeIsSet(true);
      }
      if (incoming.get(8)) {
        struct.createUserId = iprot.readString();
        struct.setCreateUserIdIsSet(true);
      }
      if (incoming.get(9)) {
        struct.lastEditTime = iprot.readI64();
        struct.setLastEditTimeIsSet(true);
      }
      if (incoming.get(10)) {
        struct.lastEditUserId = iprot.readString();
        struct.setLastEditUserIdIsSet(true);
      }
      if (incoming.get(11)) {
        struct.remark = iprot.readString();
        struct.setRemarkIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

