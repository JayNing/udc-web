/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.thrift.common.define;


import java.util.Map;
import java.util.HashMap;
import org.apache.thrift.TEnum;

public enum ImMessageType implements org.apache.thrift.TEnum {
  ImMessageType_Check(0),
  ImMessageType_Heartbeat(1),
  ImMessageType_Point(2),
  ImMessageType_Flock(3),
  ImMessageType_Reply(4),
  ImMessageType_Notification(5),
  ImMessageType_Flock_Touch(6),
  ImMessageType_Point_Touch(7),
  ImMessageType_Abnormal_Login(8),
  ImMessageType_Survey(9),
  ImMessageType_Backup(10000);

  private final int value;

  private ImMessageType(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static ImMessageType findByValue(int value) { 
    switch (value) {
      case 0:
        return ImMessageType_Check;
      case 1:
        return ImMessageType_Heartbeat;
      case 2:
        return ImMessageType_Point;
      case 3:
        return ImMessageType_Flock;
      case 4:
        return ImMessageType_Reply;
      case 5:
        return ImMessageType_Notification;
      case 6:
        return ImMessageType_Flock_Touch;
      case 7:
        return ImMessageType_Point_Touch;
      case 8:
        return ImMessageType_Abnormal_Login;
      case 9:
        return ImMessageType_Survey;
      case 10000:
        return ImMessageType_Backup;
      default:
        return null;
    }
  }
}
