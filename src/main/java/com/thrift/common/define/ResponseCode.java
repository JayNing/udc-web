/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.thrift.common.define;


import java.util.Map;
import java.util.HashMap;
import org.apache.thrift.TEnum;

public enum ResponseCode implements org.apache.thrift.TEnum {
  Define(0),
  Succeed(1),
  Failed(2),
  ArgumentsException(100),
  NotLogin(101),
  DataException(102),
  TokenIdNotFound(103),
  TokenIdException(104),
  DataExist(105),
  LoginException(106),
  IsEnterpriseUser(107),
  ReLogin(10010001),
  UserNotFound(10010002),
  UserPasswordError(10010003),
  UserNotAccess(10010004),
  PhoneExist(10010005),
  EmailExist(10010006),
  LoginExist(10010007),
  CardNotFound(10010008),
  CompanyNameError(10010009),
  RealNameError(10010010),
  TaxpayerNumberError(10010011),
  PositionError(10010012),
  MultiCardIdiImperfectMatching(10010013),
  Authenticated(10010014);

  private final int value;

  private ResponseCode(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static ResponseCode findByValue(int value) { 
    switch (value) {
      case 0:
        return Define;
      case 1:
        return Succeed;
      case 2:
        return Failed;
      case 100:
        return ArgumentsException;
      case 101:
        return NotLogin;
      case 102:
        return DataException;
      case 103:
        return TokenIdNotFound;
      case 104:
        return TokenIdException;
      case 105:
        return DataExist;
      case 106:
        return LoginException;
      case 107:
        return IsEnterpriseUser;
      case 10010001:
        return ReLogin;
      case 10010002:
        return UserNotFound;
      case 10010003:
        return UserPasswordError;
      case 10010004:
        return UserNotAccess;
      case 10010005:
        return PhoneExist;
      case 10010006:
        return EmailExist;
      case 10010007:
        return LoginExist;
      case 10010008:
        return CardNotFound;
      case 10010009:
        return CompanyNameError;
      case 10010010:
        return RealNameError;
      case 10010011:
        return TaxpayerNumberError;
      case 10010012:
        return PositionError;
      case 10010013:
        return MultiCardIdiImperfectMatching;
      case 10010014:
        return Authenticated;
      default:
        return null;
    }
  }
}
